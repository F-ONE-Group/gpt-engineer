name: CI

on:
  pull_request:
    branches:
      - test
      - master

jobs:
  check-branch:
    name: check branch rules
    runs-on: ubuntu-latest
    steps:
      - name: branch rule
        if: github.base_ref == 'master' && github.head_ref != 'test'
        run: |
          echo "ERROR: you can only merge to master branch from test."
          exit 1

  black-linting:
    needs: check-branch
    if: github.base_ref == 'test'
    name: Python Black Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Python Black
        uses: cytopia/docker-black@0.8
        with:
          path: "."

  test:
    needs: black-linting
    if: github.base_ref == 'test'
    runs-on: ubuntu-latest
    env:
      GIT_TOKEN: ${{ secrets.PRIVATE_TOKEN_GITHUB }}
    strategy:
      matrix:
        # check against multiple python versions
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          git config --global url."https://$GIT_TOKEN@github.com".insteadOf "ssh://git@github.com"
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: pytest
  test-build-image:
    needs: test
    if: github.base_ref == 'test'
    runs-on: ubuntu-latest
    env:
      GIT_TOKEN: ${{ secrets.PRIVATE_TOKEN_GITHUB }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build . --file Dockerfile --build-arg GIT_TOKEN=${{ env.GIT_TOKEN }}
